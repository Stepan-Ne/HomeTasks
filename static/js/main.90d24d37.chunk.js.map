{"version":3,"sources":["p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/SwitchOn.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/Menu.tsx","p2-homeworks/h1/Raiting.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","SwitchOn","props","useState","value","setValue","switchStyle","border","padding","margin","background","onStyle","indiStyle","style","onClick","setState","oN","switchOn","HW1","state","toString","console","log","title","price","filter","v","Message","on","setOn","width","height","display","offStyle","indicatorStyle","borderRadius","marginLeft","styless","Accordion","Menu","collapsed","setCollapsed","Raiting","Star","App","className","s","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.90d24d37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__UmC-r\"};","import React, {useState} from \"react\";\r\n\r\n\r\ntype StyleType = {\r\n    border: string,\r\n    padding: string,\r\n    margin: string,\r\n    background?: string\r\n}\r\ntype PropsType = {\r\n    setState: (value: boolean) => void\r\n}\r\nexport function SwitchOn(props: PropsType) {\r\n    const [value, setValue] = useState<boolean>(false);\r\n    let switchStyle = {\r\n        border: \"1px solid black\",\r\n        padding: \"2px\",\r\n        margin: \"2px\",\r\n        background: value ? \"white\" : \"red\"\r\n    }\r\n    let onStyle = {\r\n        border: \"1px solid black\",\r\n        padding: \"2px\",\r\n        margin: \"2px\",\r\n        background: value ? \"green\" : \"white\"\r\n    }\r\n    let indiStyle = {\r\n        border: \"1px solid black\",\r\n        padding: \"2px\",\r\n        margin: \"2px\",\r\n        background: value ? \"green\" : \"red\"\r\n    }\r\n\r\n    function oN(value: boolean) {\r\n        setValue(value)\r\n        props.setState(value)\r\n    }\r\n    function switchOn(value: boolean) {\r\n        setValue(value)\r\n        props.setState(value)\r\n    }\r\n\r\n    return <div>\r\n        <span style={onStyle} onClick={() => oN(true)}>On</span>\r\n        <span style={switchStyle} onClick={() => switchOn(false)}>Switch</span>\r\n        <span style={indiStyle}>indicator</span>\r\n    </div>\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {SwitchOn} from \"./SwitchOn\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    const [state, setState] = useState<boolean>(false)\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h2>{state.toString()}</h2>\r\n            <SwitchOn setState={setState}/>\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            {/*<Message*/}\r\n            {/*    avatar={messageData.avatar}*/}\r\n            {/*    name={messageData.name}*/}\r\n            {/*    message={messageData.message}*/}\r\n            {/*    time={messageData.time}*/}\r\n            {/*/>*/}\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\nexport default HW1;\r\n","import React, {MouseEvent, useState} from \"react\";\r\n\r\nconst styless = {\r\n    margin: \"40px auto\",\r\n    width: \"200px\",\r\n}\r\ntype PropsType = {\r\n  //  on: boolean\r\n}\r\n\r\nconst Message = (props: PropsType) => {\r\n\r\n    let [on, setOn] = useState(false);\r\n    const onChangeHadler = (e: MouseEvent<HTMLDivElement>) => {\r\n        on = true;\r\n    }\r\n\r\n    const onStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        padding: \"5px\",\r\n        display: \"inline-block\",\r\n        background: on ? \"green\" : \"white\"\r\n    }\r\n    const offStyle = {\r\n        width: \"30px\",\r\n        height: \"20px\",\r\n        border: \"1px solid black\",\r\n        padding: \"5px\",\r\n        display: \"inline-block\",\r\n        background: on ? \"white\" : \"red\"\r\n    }\r\n    const indicatorStyle = {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        borderRadius: \"10px\",\r\n        marginLeft: \"5px\",\r\n        background: on ? \"green\" : \"red\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\"\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={onStyle} onClick={() => setOn(true)}>On</div>\r\n            <div style={offStyle} onClick={() => setOn(false)}>Off</div>\r\n            <div style={indicatorStyle}></div>\r\n        </div>\r\n    )\r\n}\r\nexport type CourseType = {\r\n    title: string\r\n    price: number\r\n}\r\nconst predicate = (p: number) => {\r\n    return p <= 150;\r\n}\r\nconst courses = [\r\n    {title: \"css\", price: 100},\r\n    {title: \"JS\", price: 150},\r\n    {title: \"React\", price: 170}\r\n]\r\nexport function chipCourses(value: Array<CourseType>) {\r\n    return value.filter((v) => predicate(v.price) )\r\n}\r\n\r\nconsole.log(chipCourses(courses))\r\n\r\nexport default Message;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//--------------------------------\r\ntype PropsUserType = {\r\n    users: {\r\n        name: string\r\n        age: number\r\n        isDone: boolean\r\n    }\r\n    title: string\r\n}\r\n\r\n const User: React.FC<PropsUserType> = ({title, ...props}) => {\r\n    const {name, age, isDone} = props.users;\r\n    return <div>\r\n        {name}\r\n        {age}\r\n        {title}\r\n    </div>\r\n}\r\n\r\n","import React, {MouseEvent, useState} from \"react\";\r\n\r\nconst styless = {\r\n    margin: \"40px auto\",\r\n    width: \"200px\",\r\n    background: \"skyBlue\",\r\n    padding: \"10px\",\r\n}\r\ntype PropsType = {\r\n    title: string\r\n}\r\n\r\nconst Menu = (props: PropsType) => {\r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n    const onCollapsedHandler = () => {\r\n        collapsed ? setCollapsed(false) : setCollapsed(true);\r\n    }\r\n\r\n    return (\r\n        <div style={styless} onClick={onCollapsedHandler}>\r\n           <h2>{props.title}</h2>\r\n            {!collapsed && <Accordion/>}\r\n        </div>\r\n    )\r\n}\r\nfunction Accordion() {\r\n    return <div>\r\n        <ul>\r\n            <li>HTML</li>\r\n            <li>CSS</li>\r\n            <li>JS</li>\r\n        </ul>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Menu;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//--------------------------------\r\ntype PropsUserType = {\r\n    users: {\r\n        name: string\r\n        age: number\r\n        isDone: boolean\r\n    }\r\n    title: string\r\n}\r\n\r\n const User: React.FC<PropsUserType> = ({title, ...props}) => {\r\n    const {name, age, isDone} = props.users;\r\n    return <div>\r\n        {name}\r\n        {age}\r\n        {title}\r\n    </div>\r\n}\r\n\r\n","import React, {MouseEvent, useState} from \"react\";\r\ntype RaitingPropsType = {\r\n    title: string\r\n}\r\nconst Raiting: React.FC<RaitingPropsType> = (props) => {\r\n    const [value, setValue] = useState<0 | 1 | 2 | 3 | 4 | 5>(0)\r\n    return <div>\r\n        <h2>{props.title}</h2>\r\n        <Star value={value >= 1} onClick={() => setValue(1)}/>\r\n        <Star value={value >= 2} onClick={() => setValue(2)}/>\r\n        <Star value={value >= 3} onClick={() => setValue(3)}/>\r\n        <Star value={value >= 4} onClick={() => setValue(4)}/>\r\n        <Star value={value >= 5} onClick={() => setValue(5)}/>\r\n        <button onClick={() => setValue(0)}>Reset</button>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default Raiting;\r\n\r\ntype StarPropsType= {\r\n    onClick: () => void\r\n    value: boolean\r\n}\r\nfunction Star(props: StarPropsType) {\r\n    return (\r\n     <span onClick={() => props.onClick()}>{props.value ? <b>Star</b> : \"Star\"} </span>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//--------------------------------\r\ntype PropsUserType = {\r\n    users: {\r\n        name: string\r\n        age: number\r\n        isDone: boolean\r\n    }\r\n    title: string\r\n}\r\n\r\n const User: React.FC<PropsUserType> = ({title, ...props}) => {\r\n    const {name, age, isDone} = props.users;\r\n    return <div>\r\n        {name}\r\n        {age}\r\n        {title}\r\n    </div>\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport Message from \"../../../p2-homeworks/h1/Message\";\r\nimport Menu from \"../../../p2-homeworks/h1/Menu\";\r\nimport Raiting from \"../../../p2-homeworks/h1/Raiting\";\r\n\r\n\r\nfunction App() {\r\n    let users = {\r\n        name: 'Jo',\r\n        age: 34,\r\n        isDone: false\r\n    }\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n           <Message/>\r\n            <Menu title=\"Menu\"/>\r\n            <Raiting title={\"Raiting\"}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n// @ts-ignore\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}