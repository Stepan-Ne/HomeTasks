{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h5/pages/Header.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Count.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h3/Greeting.module.css"],"names":["module","exports","count","margin","borderRadius","backgroundColor","padding","maxWidth","value","fontSize","border","buttons","marginTop","button","display","marginLeft","flagStyle","color","Count","props","style","flag","onChange","e","console","log","currentTarget","countValue","disabled","onClick","incrementValue","resetValue","HW1","useState","setFlag","setValue","Affair","affair","name","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","length","s","general","className","block","err","btn","GreetingContainer","users","addUserCallback","setName","setError","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","errorInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","trim","showAlert","setChecked","column","inputErr","blue","PreJunior","jun","Junior","JuniorPlus","Error404","id","err404","titleErr","PATH","Routes","path","exact","render","to","Header","navbar","check","htmlFor","cancel","sidebar","activeClassName","active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d03d0ca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"inputErr\":\"HW4_inputErr__27pZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Header_sidebar__3GT2U\",\"check\":\"Header_check__wZ4xC\",\"btn\":\"Header_btn__1UEqj\",\"cancel\":\"Header_cancel__23kix\",\"jun\":\"Header_jun__2Zqcf\",\"err404\":\"Header_err404__OVUAm\",\"titleErr\":\"Header_titleErr__1SyS1\",\"type\":\"Header_type__3XClN\",\"active\":\"Header_active__2HXpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React, {FormEvent} from \"react\";\n\ntype PropsType = {\n    countValue: number\n    incrementValue: () => void\n    resetValue: () => void\n    flag: boolean\n}\nconst count = {\n    margin: \"0 auto\",\n    borderRadius: \"5px\",\n    backgroundColor: \"#f2f2f2\",\n    padding: \"20px\",\n    maxWidth: \"200px\",\n};\nconst value = {\n    fontSize: \"2rem\",\n    border: \"1px solid black\",\n    padding: \"5px\",\n};\nconst buttons = {\n    border: \"1px solid black\",\n    marginTop: \"2px\",\n    padding: \"10px\"\n};\nconst button = {\n    border: \"1px solid black\",\n    padding: \"10px\",\n    borderRadius: \"2px\",\n    display: \"inline-block\",\n    marginLeft: \"20px\"\n};\nconst flagStyle = {\n    color: \"orange\",\n    fontSize: \"2.5rem\",\n    border: \"1px solid black\",\n    padding: \"5px\",\n};\n\nconst Count: React.FC<PropsType> = (props) => {\n\n    const increment = () => {\n        props.incrementValue();\n    };\n    const reset = () => {\n        props.resetValue();\n    };\n    const onChangeValueHandler = (e: FormEvent<HTMLDivElement>) => {\n        console.log(e.currentTarget);\n    };\n\n    return <div style={count}>\n\n        <div style={props.flag ? flagStyle : value} onChange={onChangeValueHandler}>\n            {props.countValue}\n        </div>\n        <div style={buttons}>\n            <div style={button}>\n                <button disabled={props.flag} onClick={increment}>inc</button>\n            </div>\n            <div style={button}>\n                <button disabled={!props.flag} onClick={reset}>reset</button>\n            </div>\n        </div>\n    </div>\n};\n\nexport default Count;","import React, {useState} from \"react\";\n\nimport Count from \"./Count\";\n\n\nfunction HW1() {\n    const [flag, setFlag] = useState(false);\n    const [value, setValue] = useState(0);\n    const maxValue = 4;\n    const incrementValue = () => {\n       if (value <= maxValue) {\n           setValue(value + 1);\n       }\n       if (value === maxValue) {\n           setFlag(true);\n           return;\n       }\n    };\n    const resetValue = () => {\n        setValue(0);\n        setFlag(false);\n    };\n\n    return (\n        <div>\n            <Count countValue={value}\n                   flag={flag}\n                   resetValue={resetValue}\n                   incrementValue={incrementValue}\n            />\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: Function\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };\n\n    return (\n        <div>\n            {props.affair.name}\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairPriorityType, AffairType} from \"./HW2\";\n\ntype AffairsPropsType = {\n    data: AffairPriorityType\n    setFilter: Function\n    deleteAffairCallback: Function\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    };\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n\n// types\nexport type AffairPriorityType = AffairType[]\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n};\nexport type FilterType = \"all\" | \"high\" | \"middle\" | \"low\";\n\n// initial data\nlet defaultAffairs: AffairPriorityType = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairPriorityType, filter: FilterType): AffairPriorityType => {\n    switch (filter) {\n        case \"high\":\n            return affairs.filter((a) => a.priority === \"high\");\n            break;\n        case \"low\":\n            return affairs.filter((a) => a.priority === \"low\");\n            break;\n        case \"middle\":\n            return affairs.filter((a) => a.priority === \"middle\");\n            break;\n        default:\n            return affairs;\n\n    }\n}\n\nexport const deleteAffair = (affairs: AffairPriorityType, _id: number): AffairPriorityType => {\n    let result = affairs.filter((a) => _id !== a._id);\n    return result;\n}\n\nfunction HW2() {\n\n    //hook for data\n    const [affairs, setAffairs] = useState<AffairPriorityType>(defaultAffairs);\n    //hook for filter\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n    //data after filtration\n    const filteredAffairs = filterAffairs(affairs, filter);\n\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs*/}\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error.length ? s.error : s.general; // need to fix with (?:)\n\n    return (\n        <div className={s.block}>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span className={s.err}>{error}</span>\n            <button onClick={addUser} className={s.btn}>add</button>\n            <span>Total users: {totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value); // need to fix\n\n    };\n    const addUser = () => {\n        if (name.length !== 0) {\n            alert(`Hello ${name} !`); // need to fix\n            addUserCallback(name);\n            setError(\"\");\n            setName(\"\");\n        } else {\n            setError(\"Error!\");\n            setName(\"\");\n        }\n    };\n\n    const totalUsers: number = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        if (users.length === 0) {\n            setUsers([{_id: v1(), name: name}])\n        } else {\n            setUsers([{_id: v1(), name: name}, ...users]);\n        }\n        // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    className?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n\n    // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\n    const finalInputClassName = `${s.superInput} ${ error ? s.errorInput : className}`;\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if (onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }\n\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                checked={restProps.checked}\n                type={\"checkbox\"}\n                onChange={onChangeChecked ? onChangeCallback : onChange}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n\n    const [text, setText] = useState<string>(\"\");\n    const error = text.trim() ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n            setText(\"\")\n        } else {\n            alert(text); // если нет ошибки показать текст\n            setText(\"\")\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    spanClassName={s.inputErr}\n                    error={error}\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red={error ? true : false} // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport s from \"./Header.module.css\";\n\nfunction PreJunior() {\n\n    return (\n        <div className={s.jun}>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\nimport s from \"./Header.module.css\";\n\n\nfunction Junior() {\n    return (\n        <div className={s.jun}>\n           Hello! I`m Junior!\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default Junior;\n","import React from \"react\";\nimport s from \"./Header.module.css\";\n\n\nfunction JuniorPlus() {\n    return (\n        <div className={s.jun}>\n           Hello! I`m JuniorPlus!\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n","import React from \"react\";\nimport s from \"./Header.module.css\";\n\nfunction Error404() {\n    return (\n        <div id={s.err404}>\n            <div className={s.titleErr}>\n                <h1>Error 404</h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport {Switch, Redirect, Route} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Error404 from \"./pages/Error404\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport {HashRouter, NavLink} from \"react-router-dom\";\nimport s from \"./pages/Header.module.css\";\nimport Routes from \"./Routes\";\n\nfunction Header() {\n    return (\n        <div className={s.navbar}>\n            <input type=\"checkbox\" id=\"check\" className={s.check}/>\n            <label htmlFor=\"check\">\n                <i className={\"fas fa-bars\"} id={s.btn}></i>\n                <i className={\"fas fa-times\"} id={s.cancel}></i>\n            </label>\n            <div className={s.sidebar}>\n                <header>React HomeWorks</header>\n                <ul>\n                    <li><NavLink activeClassName={s.active}\n                        to={\"/pre-junior\"}><i className={\"fas fa-link\"}></i>PreJunior</NavLink></li>\n                    <li><NavLink activeClassName={s.active}\n                        to={\"/junior\"}><i className={\"fas fa-link\"}></i>Junior</NavLink></li>\n                    <li><NavLink activeClassName={s.active}\n                        to={\"/junior-plus\"}><i className={\"fas fa-link\"}></i>JuniorPlus</NavLink></li>\n                    <li><NavLink activeClassName={s.active}\n                        to={\"/overview\"}><i className={\"fas fa-stream\"}></i>Overview</NavLink></li>\n                    <li><NavLink activeClassName={s.active}\n                        to={\"/contact\"}><i className={\"fas fa-envelope\"}></i>Contact</NavLink></li>\n                </ul>\n            </div>\n            <section>\n                <Routes/>\n            </section>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\n\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport Error404 from \"../../../p2-homeworks/h5/pages/Error404\";\nimport {Route} from \"react-router-dom\";\n\n\nfunction App() {\n\n    return (\n        <div className={s.App}>\n            {/*<div>react homeworks:</div>*/}\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n// @ts-ignore\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\",\"general\":\"Greeting_general__3Gf12\",\"btn\":\"Greeting_btn__1zEPl\",\"block\":\"Greeting_block__1MsEr\",\"err\":\"Greeting_err__3wKRP\"};"],"sourceRoot":""}